{"version":3,"sources":["webpack:///./src/components/UserInfo/index.jsx","webpack:///./src/components/Disqus/index.jsx","webpack:///./src/components/PostInfo/index.jsx","webpack:///./src/components/SocialLinks/index.jsx","webpack:///./src/components/PostSuggestions/index.jsx","webpack:///./src/components/SEO/index.jsx","webpack:///./src/templates/post.jsx","webpack:///./src/components/PostTags/index.jsx","webpack:///./src/components/PostCover/PostCoverComponent.jsx","webpack:///./src/components/PostCover/index.jsx"],"names":["components_UserInfo","render","_this$props$config","this","props","config","userAvatar","userName","userLocation","userDescription","userTwitter","expanded","react_default","a","createElement","Card_default","className","CardTitle_default","expander","avatar","Avatars_default","src","role","title","subtitle","dist","Follow","username","options","count","CardText_default","expandable","IconSeparator_default","label","iconBefore","FontIcons_default","iconClassName","c","react","Component","C","l","D","n","u","R","I","S","M","P","components_Disqus","Disqus","_this","_Component","call","state","toasts","notifyAboutComment","bind","assertThisInitialized_default","onSnackbarDismiss","slice","setState","push","text","_this$props","postNode","SiteConfig_default","disqusShortname","post","frontmatter","url","url_join_default","siteUrl","pathPrefix","fields","slug","icon","main_default","shortname","identifier","category_id","onNewComment","Snackbars_default","onDismiss","U","H","V","k","T","F","O","components_PostInfo","moment_default","date","format","dateFormat","timeToRead","gatsby_browser_entry","Link","to","kebabCase_default","category","z","Z","X","J","L","K","q","_","$","AA","cA","lA","aA","eA","tA","sA","components_SocialLinks","postPath","mobile","iconSize","renderShareCount","RedditShareButton","RedditIcon","round","size","RedditShareCount","TwitterShareButton","TwitterIcon","GooglePlusShareButton","GooglePlusIcon","GooglePlusShareCount","FacebookShareButton","quote","excerpt","FacebookIcon","FacebookShareCount","LinkedinShareButton","description","LinkedinIcon","LinkedinShareCount","TelegramShareButton","TelegramIcon","components_PostSuggestions_PostSuggestions","postFields","prevSlug","forceFontSize","forceSize","prevTitle","nextSlug","nextTitle","components_SEO","image","postURL","postSEO","postMeta","cover","siteTitle","siteDescription","siteLogo","blogURL","schemaOrgJSONLD","@context","@type","name","alternateName","siteTitleAlt","itemListElement","position","item","@id","headline","Helmet_default","content","type","JSON","stringify","property","siteFBAppID","d","vA","dA","post_PostTemplate","PostTemplate","_React$Component","handleResize","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","pageContext","postOverlapClass","data","markdownRemark","id","postDefaultCategoryID","coverHeight","layout","location","rel","href","PostCover","coverClassName","Cards_default","dangerouslySetInnerHTML","__html","html","PostTags","tags","pageQuery","332","A","e","t","s","h","r","i","v","react__WEBPACK_IMPORTED_MODULE_3___default","map","tag","gatsby__WEBPACK_IMPORTED_MODULE_4__","key","style","textDecoration","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_2___default","react_md_lib_Chips__WEBPACK_IMPORTED_MODULE_5___default","react__WEBPACK_IMPORTED_MODULE_3__","__webpack_exports__","334","336","exports","allFile","edges","node","absolutePath","childImageSharp","resolutions","base64","tracedSVG","aspectRatio","width","height","srcSet","srcWebp","srcSetWebp","originalName","internal","contentDigest","owner","fluid","sizes","337","353","PostCoverComponent","fileEdges","coverNodeList","filter","fileNode","indexOf","path_browserify_default","join","length","gatsby_image_default","outerWrapperClassName","coverURL","substring","backgroundImage","PostCover_queryWrapper","StaticQuery","query","_590853412","E","656","684","686","739","741","743"],"mappings":"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","file":"component---src-templates-post-jsx-effca2cdecf4a341b267.js","sourcesContent":["import React, { Component } from 'react';\nimport Card from 'react-md/lib/Cards/Card';\nimport CardTitle from 'react-md/lib/Cards/CardTitle';\nimport CardText from 'react-md/lib/Cards/CardText';\nimport Avatar from 'react-md/lib/Avatars';\nimport FontIcon from 'react-md/lib/FontIcons';\nimport IconSeparator from 'react-md/lib/Helpers/IconSeparator';\nimport { Follow } from 'react-twitter-widgets';\nimport './UserInfo.scss';\n\nclass UserInfo extends Component {\n  render() {\n    const { userAvatar, userName, userLocation, userDescription, userTwitter } = this.props.config;\n    const { expanded } = this.props;\n    if (!userAvatar && !userName && !userLocation && !userDescription) {\n      return null;\n    }\n    return (\n      <Card className=\"md-grid md-cell md-cell--12 user-info\">\n        <CardTitle\n          expander={!expanded}\n          avatar={userAvatar && <Avatar src={userAvatar} role=\"presentation\" />}\n          title={userName && userName}\n          subtitle={\n            userTwitter ? (\n              <Follow username={userTwitter} options={{ count: expanded ? 'none' : 'none' }} />\n            ) : (\n              'Author'\n            )\n          }\n        />\n        <CardText expandable={!expanded}>\n          {userLocation && (\n            <IconSeparator label={userLocation} iconBefore>\n              <FontIcon iconClassName=\"fa fa-map-marker\" />\n            </IconSeparator>\n          )}\n          <p>{userDescription && userDescription}</p>\n        </CardText>\n      </Card>\n    );\n  }\n}\n\nexport default UserInfo;\n","import React, { Component } from \"react\";\nimport ReactDisqusComments from \"react-disqus-comments\";\nimport urljoin from \"url-join\";\nimport Card from \"react-md/lib/Cards/Card\";\nimport CardTitle from \"react-md/lib/Cards/CardTitle\";\nimport CardText from \"react-md/lib/Cards/CardText\";\nimport Avatar from \"react-md/lib/Avatars\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport Snackbar from \"react-md/lib/Snackbars\";\nimport config from \"../../../data/SiteConfig\";\n\nclass Disqus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toasts: []\n    };\n    this.notifyAboutComment = this.notifyAboutComment.bind(this);\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this);\n  }\n\n  onSnackbarDismiss() {\n    const [, ...toasts] = this.state.toasts;\n    this.setState({ toasts });\n  }\n  notifyAboutComment() {\n    const toasts = this.state.toasts.slice();\n    toasts.push({ text: \"New comment available!\" });\n    this.setState({ toasts });\n  }\n  render() {\n    const { postNode, expanded } = this.props;\n    if (!config.disqusShortname) {\n      return null;\n    }\n    const post = postNode.frontmatter;\n    const url = urljoin(\n      config.siteUrl,\n      config.pathPrefix,\n      postNode.fields.slug\n    );\n\n    return (\n      <Card className=\"md-grid md-cell md-cell--12\">\n        <CardTitle\n          title=\"Comments\"\n          avatar={<Avatar icon={<FontIcon>comment</FontIcon>} />}\n          expander={!expanded}\n        />\n        <CardText expandable={!expanded}>\n          <ReactDisqusComments\n            shortname={config.disqusShortname}\n            identifier={post.title}\n            title={post.title}\n            url={url}\n            category_id={post.category_id}\n            onNewComment={this.notifyAboutComment}\n          />\n        </CardText>\n        <Snackbar\n          toasts={this.state.toasts}\n          onDismiss={this.onSnackbarDismiss}\n        />\n      </Card>\n    );\n  }\n}\n\nexport default Disqus;\n","import React, { Component } from \"react\";\nimport CardTitle from \"react-md/lib/Cards/CardTitle\";\nimport Avatar from \"react-md/lib/Avatars\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport { Link } from \"gatsby\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./PostInfo.scss\";\n\nclass PostInfo extends Component {\n  render() {\n    const { postNode } = this.props;\n    const post = postNode.frontmatter;\n    return (\n      <div className=\"post-info\">\n        <CardTitle\n          avatar={<Avatar icon={<FontIcon iconClassName=\"fa fa-calendar\" />} />}\n          title={`Published on ${moment(postNode.fields.date).format(\n            config.dateFormat\n          )}`}\n          subtitle={`${postNode.timeToRead} min read`}\n        />\n        <Link\n          className=\"category-link\"\n          to={`/categories/${_.kebabCase(post.category)}`}\n        >\n          <CardTitle\n            avatar={\n              <Avatar icon={<FontIcon iconClassName=\"fa fa-folder-open\" />} />\n            }\n            title=\"In category\"\n            subtitle={post.category}\n          />\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default PostInfo;\n","import React, { Component } from \"react\";\nimport {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  TelegramShareButton,\n  RedditShareButton,\n  FacebookShareCount,\n  GooglePlusShareCount,\n  LinkedinShareCount,\n  RedditShareCount,\n  FacebookIcon,\n  TwitterIcon,\n  TelegramIcon,\n  GooglePlusIcon,\n  LinkedinIcon,\n  RedditIcon\n} from \"react-share\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./SocialLinks.scss\";\n\nclass SocialLinks extends Component {\n  render() {\n    const { postNode, postPath, mobile } = this.props;\n    const post = postNode.frontmatter;\n    const url = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    const iconSize = mobile ? 36 : 48;\n    const filter = count => (count > 0 ? count : \"\");\n    const renderShareCount = count => (\n      <div className=\"share-count\">{filter(count)}</div>\n    );\n\n    return (\n      <div className=\"social-links\">\n        <RedditShareButton url={url} title={post.title}>\n          <RedditIcon round size={iconSize} />\n          <RedditShareCount url={url}>\n            {count => renderShareCount(count)}\n          </RedditShareCount>\n        </RedditShareButton>\n        <TwitterShareButton url={url} title={post.title}>\n          <TwitterIcon round size={iconSize} />\n        </TwitterShareButton>\n        <GooglePlusShareButton url={url}>\n          <GooglePlusIcon round size={iconSize} />\n          <GooglePlusShareCount url={url}>\n            {count => renderShareCount(count)}\n          </GooglePlusShareCount>\n        </GooglePlusShareButton>\n        <FacebookShareButton url={url} quote={postNode.excerpt}>\n          <FacebookIcon round size={iconSize} />\n          <FacebookShareCount url={url}>\n            {count => renderShareCount(count)}\n          </FacebookShareCount>\n        </FacebookShareButton>\n        <LinkedinShareButton\n          url={url}\n          title={post.title}\n          description={postNode.excerpt}\n        >\n          <LinkedinIcon round size={iconSize} />\n          <LinkedinShareCount url={url}>\n            {count => renderShareCount(count)}\n          </LinkedinShareCount>\n        </LinkedinShareButton>\n        <TelegramShareButton url={url}>\n          <TelegramIcon round size={iconSize} />\n        </TelegramShareButton>\n      </div>\n    );\n  }\n}\n\nexport default SocialLinks;\n","import React, { Component } from \"react\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport { Link } from \"gatsby\";\nimport \"./PostSuggestions.scss\";\n\nexport default class PostSuggestions extends Component {\n  render() {\n    const { postNode } = this.props;\n    const postFields = postNode.fields;\n    return (\n      <div className=\"post-suggestions md-grid md-cell--12\">\n        <Link to={postFields.prevSlug} className=\"post-suggestion\">\n          <FontIcon\n            forceFontSize\n            forceSize={64}\n            className=\"secondary-color arrow-nav\"\n          >\n            arrow_back\n          </FontIcon>\n          <div className=\"headline-container hide-on-mobile\">\n            <h2 className=\"md-body-2 secondary-color\">Previous</h2>\n            <h6 className=\"md-headline secondary-color\">\n              {postFields.prevTitle}\n            </h6>\n          </div>\n        </Link>\n        <Link to={postFields.nextSlug} className=\"post-suggestion\">\n          <div className=\"headline-container\">\n            <h2 className=\"md-body-2 secondary-color\">Next</h2>\n            <h6 className=\"md-headline secondary-color\">\n              {postFields.nextTitle}\n            </h6>\n          </div>\n          <FontIcon\n            forceFontSize\n            forceSize={64}\n            className=\"secondary-color arrow-nav\"\n          >\n            arrow_forward\n          </FontIcon>\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push([\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      ]);\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Card from \"react-md/lib/Cards\";\nimport CardText from \"react-md/lib/Cards/CardText\";\nimport Layout from \"../layout\";\nimport UserInfo from \"../components/UserInfo\";\nimport Disqus from \"../components/Disqus\";\nimport PostTags from \"../components/PostTags\";\nimport PostCover from \"../components/PostCover\";\nimport PostInfo from \"../components/PostInfo\";\nimport SocialLinks from \"../components/SocialLinks\";\nimport PostSuggestions from \"../components/PostSuggestions\";\nimport SEO from \"../components/SEO\";\nimport config from \"../../data/SiteConfig\";\nimport \"./b16-tomorrow-dark.css\";\nimport \"./post.scss\";\n\nexport default class PostTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobile: true\n    };\n    this.handleResize = this.handleResize.bind(this);\n  }\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize() {\n    if (window.innerWidth >= 640) {\n      this.setState({ mobile: false });\n    } else {\n      this.setState({ mobile: true });\n    }\n  }\n\n  render() {\n    const { mobile } = this.state;\n    const { slug } = this.props.pageContext;\n    const expanded = !mobile;\n    const postOverlapClass = mobile ? \"post-overlap-mobile\" : \"post-overlap\";\n    const postNode = this.props.data.markdownRemark;\n    const post = postNode.frontmatter;\n    if (!post.id) {\n      post.id = slug;\n    }\n    if (!post.category_id) {\n      post.category_id = config.postDefaultCategoryID;\n    }\n\n    const coverHeight = mobile ? 180 : 350;\n    return (\n      <Layout location={this.props.location}>\n        <div className=\"post-page md-grid md-grid--no-spacing\">\n          <Helmet>\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\n            <link rel=\"canonical\" href={`${config.siteUrl}${post.id}`} />\n          </Helmet>\n          <SEO postPath={slug} postNode={postNode} postSEO />\n          <PostCover\n            postNode={postNode}\n            coverHeight={coverHeight}\n            coverClassName=\"md-grid md-cell--9 post-cover\"\n          />\n          <div\n            className={`md-grid md-cell--9 post-page-contents mobile-fix ${postOverlapClass}`}\n          >\n            <Card className=\"md-grid md-cell md-cell--12 post\">\n              <CardText className=\"post-body\">\n                <h1 className=\"md-display-2 post-header\">{post.title}</h1>\n                <PostInfo postNode={postNode} />\n                <div dangerouslySetInnerHTML={{ __html: postNode.html }} />\n              </CardText>\n              <div className=\"post-meta\">\n                <PostTags tags={post.tags} />\n                <SocialLinks\n                  postPath={slug}\n                  postNode={postNode}\n                  mobile={this.state.mobile}\n                />\n              </div>\n            </Card>\n            <UserInfo\n              className=\"md-grid md-cell md-cell--12\"\n              config={config}\n              expanded={expanded}\n            />\n            <Disqus postNode={postNode} expanded={expanded} />\n          </div>\n\n          <PostSuggestions postNode={postNode} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        cover\n        date\n        category\n        tags\n      }\n      fields {\n        nextTitle\n        nextSlug\n        prevTitle\n        prevSlug\n        slug\n        date\n      }\n    }\n  }\n`;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\nimport Chip from \"react-md/lib/Chips\";\nimport \"./PostTags.scss\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-tag-container\">\n        {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              <Chip label={tag} className=\"post-preview-tags\" />\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import React, { Component } from \"react\";\nimport Img from \"gatsby-image\";\nimport path from \"path\";\nimport \"./PostCover.scss\";\n\nclass PostCover extends Component {\n  render() {\n    const { fileEdges, postNode, coverHeight, coverClassName } = this.props;\n    const post = postNode.frontmatter ? postNode.frontmatter : postNode;\n    const coverNodeList = fileEdges.filter(fileNode => {\n      if (fileNode.node.childImageSharp === null) return false;\n\n      if (\n        fileNode.node.absolutePath.indexOf(\n          path.join(\"/static/assets/\", post.cover)\n        ) !== -1\n      )\n        return true;\n\n      return false;\n    });\n\n    if (coverNodeList.length === 1) {\n      return (\n        <Img\n          fluid={coverNodeList[0].node.childImageSharp.fluid}\n          outerWrapperClassName={coverClassName}\n          style={{ height: coverHeight, width: \"100%\" }}\n        />\n      );\n    }\n\n    /* eslint no-undef: \"off\" */\n    const coverURL =\n      post.cover.substring(0, 1) === \"/\"\n        ? __PATH_PREFIX__ + post.cover\n        : post.cover;\n    return (\n      <div\n        style={{\n          backgroundImage: `url(${coverURL})`,\n          height: `${coverHeight}px`\n        }}\n        className={coverClassName}\n      />\n    );\n  }\n}\n\nexport default PostCover;\n","import React, { Component } from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport PostCover from \"./PostCoverComponent\";\n\nclass queryWrapper extends Component {\n  render() {\n    const { postNode, coverHeight, coverClassName } = this.props;\n    return (\n      <StaticQuery\n        query={graphql`\n          query CoverQuery {\n            allFile {\n              edges {\n                node {\n                  id\n                  absolutePath\n                  childImageSharp {\n                    id\n                    resolutions {\n                      base64\n                      tracedSVG\n                      aspectRatio\n                      width\n                      height\n                      src\n                      srcSet\n                      srcWebp\n                      srcSetWebp\n                      originalName\n                    }\n                    internal {\n                      contentDigest\n                      type\n                      owner\n                    }\n                    fluid(maxWidth: 1240) {\n                      ...GatsbyImageSharpFluid\n                      originalName\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => (\n          <PostCover\n            fileEdges={data.allFile.edges}\n            postNode={postNode}\n            coverHeight={coverHeight}\n            coverClassName={coverClassName}\n          />\n        )}\n      />\n    );\n  }\n}\n\nexport default queryWrapper;\n"],"sourceRoot":""}