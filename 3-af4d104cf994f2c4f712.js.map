{"version":3,"sources":["webpack:///./src/components/PostTags/index.jsx","webpack:///./src/components/PostCover/PostCoverComponent.jsx","webpack:///./src/components/PostCover/index.jsx","webpack:///./src/components/PostPreview/index.jsx","webpack:///./src/components/PostListing/index.jsx","webpack:///./node_modules/react-md/lib/Media/index.js"],"names":["PostTags","render","tags","this","props","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","className","map","tag","gatsby__WEBPACK_IMPORTED_MODULE_4__","Link","key","style","textDecoration","to","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_2___default","react_md_lib_Chips__WEBPACK_IMPORTED_MODULE_5___default","label","c","react__WEBPACK_IMPORTED_MODULE_3__","Component","__webpack_exports__","g","334","A","l","336","exports","data","allFile","edges","node","id","absolutePath","childImageSharp","resolutions","base64","tracedSVG","aspectRatio","width","height","src","srcSet","srcWebp","srcSetWebp","originalName","internal","contentDigest","type","owner","fluid","sizes","337","353","e","n","t","s","h","v","r","i","d","PostCoverComponent","_this$props","fileEdges","postNode","coverHeight","coverClassName","post","frontmatter","coverNodeList","filter","fileNode","indexOf","path_browserify_default","join","cover","length","react_default","gatsby_image_default","outerWrapperClassName","coverURL","substring","backgroundImage","react","PostCover_queryWrapper","gatsby_browser_entry","StaticQuery","query","_590853412","E","430","b","f","B","m","j","Q","o","p","w","Y","x","N","C","D","y","components_PostPreview","PostPreview","_this","_Component","call","state","mobile","handleResize","bind","assertThisInitialized_default","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","setState","postInfo","expand","Card_default","path","raise","Media_default","paddingBottom","PostCover","Media","MediaOverlay","CardTitle_default","title","Buttons_default","raised","secondary","expander","avatar","Avatars_default","icon","FontIcons_default","iconClassName","moment_default","date","format","SiteConfig_default","dateFormat","subtitle","timeToRead","CardText_default","expandable","excerpt","PostListing_PostListing","getPostList","postList","postEdges","forEach","postEdge","push","fields","slug","I","745","__esModule","_Media3","_interopRequireDefault","__webpack_require__","_MediaOverlay3","obj","default"],"mappings":"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","file":"3-af4d104cf994f2c4f712.js","sourcesContent":["import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\nimport Chip from \"react-md/lib/Chips\";\nimport \"./PostTags.scss\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-tag-container\">\n        {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              <Chip label={tag} className=\"post-preview-tags\" />\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import React, { Component } from \"react\";\nimport Img from \"gatsby-image\";\nimport path from \"path\";\nimport \"./PostCover.scss\";\n\nclass PostCover extends Component {\n  render() {\n    const { fileEdges, postNode, coverHeight, coverClassName } = this.props;\n    const post = postNode.frontmatter ? postNode.frontmatter : postNode;\n    const coverNodeList = fileEdges.filter(fileNode => {\n      if (fileNode.node.childImageSharp === null) return false;\n\n      if (\n        fileNode.node.absolutePath.indexOf(\n          path.join(\"/static/assets/\", post.cover)\n        ) !== -1\n      )\n        return true;\n\n      return false;\n    });\n\n    if (coverNodeList.length === 1) {\n      return (\n        <Img\n          fluid={coverNodeList[0].node.childImageSharp.fluid}\n          outerWrapperClassName={coverClassName}\n          style={{ height: coverHeight, width: \"100%\" }}\n        />\n      );\n    }\n\n    /* eslint no-undef: \"off\" */\n    const coverURL =\n      post.cover.substring(0, 1) === \"/\"\n        ? __PATH_PREFIX__ + post.cover\n        : post.cover;\n    return (\n      <div\n        style={{\n          backgroundImage: `url(${coverURL})`,\n          height: `${coverHeight}px`\n        }}\n        className={coverClassName}\n      />\n    );\n  }\n}\n\nexport default PostCover;\n","import React, { Component } from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport PostCover from \"./PostCoverComponent\";\n\nclass queryWrapper extends Component {\n  render() {\n    const { postNode, coverHeight, coverClassName } = this.props;\n    return (\n      <StaticQuery\n        query={graphql`\n          query CoverQuery {\n            allFile {\n              edges {\n                node {\n                  id\n                  absolutePath\n                  childImageSharp {\n                    id\n                    resolutions {\n                      base64\n                      tracedSVG\n                      aspectRatio\n                      width\n                      height\n                      src\n                      srcSet\n                      srcWebp\n                      srcSetWebp\n                      originalName\n                    }\n                    internal {\n                      contentDigest\n                      type\n                      owner\n                    }\n                    fluid(maxWidth: 1240) {\n                      ...GatsbyImageSharpFluid\n                      originalName\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => (\n          <PostCover\n            fileEdges={data.allFile.edges}\n            postNode={postNode}\n            coverHeight={coverHeight}\n            coverClassName={coverClassName}\n          />\n        )}\n      />\n    );\n  }\n}\n\nexport default queryWrapper;\n","import React, { Component } from \"react\";\nimport Card from \"react-md/lib/Cards/Card\";\nimport CardTitle from \"react-md/lib/Cards/CardTitle\";\nimport Button from \"react-md/lib/Buttons\";\nimport Avatar from \"react-md/lib/Avatars\";\nimport CardText from \"react-md/lib/Cards/CardText\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport { Link } from \"gatsby\";\nimport moment from \"moment\";\nimport Media, { MediaOverlay } from \"react-md/lib/Media\";\nimport PostTags from \"../PostTags\";\nimport PostCover from \"../PostCover\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./PostPreview.scss\";\n\nclass PostPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobile: true\n    };\n    this.handleResize = this.handleResize.bind(this);\n  }\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize() {\n    if (window.innerWidth >= 640) {\n      this.setState({ mobile: false });\n    } else {\n      this.setState({ mobile: true });\n    }\n  }\n  render() {\n    const { postInfo } = this.props;\n    const { mobile } = this.state;\n    const expand = mobile;\n    /* eslint no-undef: \"off\" */\n    const coverHeight = mobile ? 162 : 225;\n    return (\n      <Card key={postInfo.path} raise className=\"md-grid md-cell md-cell--12\">\n        <Link style={{ textDecoration: \"none\" }} to={postInfo.path}>\n          <Media style={{ height: coverHeight, paddingBottom: \"0px\" }}>\n            <PostCover postNode={postInfo} coverHeight={coverHeight} />\n            <MediaOverlay>\n              <CardTitle title={postInfo.title}>\n                <Button raised secondary className=\"md-cell--right\">\n                  Read\n                </Button>\n              </CardTitle>\n            </MediaOverlay>\n          </Media>\n        </Link>\n        <CardTitle\n          expander={expand}\n          avatar={<Avatar icon={<FontIcon iconClassName=\"fa fa-calendar\" />} />}\n          title={`Published on ${moment(postInfo.date).format(\n            config.dateFormat\n          )}`}\n          subtitle={`${postInfo.timeToRead} min read`}\n        />\n\n        <CardText expandable={expand}>\n          {postInfo.excerpt}\n          <PostTags tags={postInfo.tags} />\n        </CardText>\n      </Card>\n    );\n  }\n}\n\nexport default PostPreview;\n","import React from 'react';\nimport PostPreview from '../PostPreview';\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead,\n      });\n    });\n    return postList;\n  }\n  render() {\n    const postList = this.getPostList();\n    return (\n      <div className=\"md-grid md-grid--no-spacing md-cell--middle\">\n        <div className=\"md-grid md-cell--8 mobile-fix\">\n          {postList.map(post => (\n            <PostPreview key={post.title} postInfo={post} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n","'use strict';\n\nexports.__esModule = true;\nexports.MediaOverlay = exports.Media = undefined;\n\nvar _Media2 = require('./Media');\n\nvar _Media3 = _interopRequireDefault(_Media2);\n\nvar _MediaOverlay2 = require('./MediaOverlay');\n\nvar _MediaOverlay3 = _interopRequireDefault(_MediaOverlay2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Media3.default;\nexports.Media = _Media3.default;\nexports.MediaOverlay = _MediaOverlay3.default;"],"sourceRoot":""}